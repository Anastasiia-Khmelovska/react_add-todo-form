{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","prevTodos","setTodos","setTitle","setUserId","titleCheck","setTitleCheck","userIdCheck","setuserIdCheck","action","method","onSubmit","event","preventDefault","trim","length","Math","max","placeholder","type","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,uBCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCF,EAEEE,EAFFF,MACAF,EACEI,EADFJ,KAGF,OACE,mBAAGK,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCNMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCJ,EAIEI,EAJFJ,KACAK,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAX,EACES,EADFT,GAGF,OACE,0BACEM,UAAWM,IAAW,WACpB,CAAE,sBAAuBD,IAC3B,UAASX,EAHX,UAME,oBAAIM,UAAU,kBAAd,SAAiCI,IAChCL,EACC,cAAC,EAAD,CAAUA,KAAMA,IAEhB,eCpBKQ,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASR,UAAU,WAAnB,SAEGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCDtC,SAASgB,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKL,KAAOiB,MAEvC,KAGf,IAAMH,EChBE,CACb,CACEd,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDDiCF,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,KAAMW,EAAQP,EAAKQ,aAGRG,EAAM,WACjB,MAA8BC,mBAASP,GAAvC,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOX,EAAP,KAAcc,EAAd,KACA,EAA4BH,mBAAS,GAArC,mBAAOJ,EAAP,KAAeQ,EAAf,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAkCA,OACE,sBAAKvB,UAAU,MAAf,UACE,+CAEA,uBACEwB,OAAO,aACPC,OAAO,OACPC,SA3BN,SAAsBC,GACpBA,EAAMC,iBAEFxB,EAAMyB,OAAOC,OAAS,GACxBT,GAAc,GAGD,IAAXV,GACFY,GAAe,GAGY,IAAxBnB,EAAMyB,OAAOC,QAA6B,IAAXnB,IAIpCM,EAAS,GAAD,mBAAKD,GAAL,CAzBN,CACEtB,GAAIqC,KAAKC,IAAL,MAAAD,KAAI,CAAK,GAAL,mBAAWf,EAAUP,KAAI,qBAAGf,GAAc,QAClDiB,SACAP,QACAC,WAAW,EACXN,KAAMW,EAAQC,IAAW,SAqB7BQ,EAAU,GACVD,EAAS,MAOP,UAKE,sBAAKlB,UAAU,QAAf,UACE,uBACEiC,YAAY,gBACZtC,KAAK,QACLuC,KAAK,OACL,UAAQ,aACRC,MAAO/B,EACPgC,SAAU,SAACT,GACTT,EAASS,EAAMU,OAAOF,OACtBd,GAAc,MAGjBD,GAAe,sBAAMpB,UAAU,QAAhB,qCAGlB,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRmC,MAAOxB,EACPyB,SAAU,SAACT,GACTR,GAAWQ,EAAMU,OAAOF,OACxBZ,GAAe,IALnB,UAQE,wBACEY,MAAM,IACNG,UAAQ,EACRC,UAAQ,EAHV,2BAOC3B,EAAgBH,KAAI,SAAAV,GAAI,OACvB,wBACEoC,MAAOpC,EAAKL,GADd,SAGGK,EAAKJ,aAIX2B,GAAe,sBAAMtB,UAAU,QAAhB,qCAGlB,wBACEkC,KAAK,SACL,UAAQ,eAFV,oBAOF,cAAC,EAAD,CAAU1B,MAAOQ,QEnHvBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0f7f48a4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n      data-id={id}\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user ? (\n        <UserInfo user={user} />\n      ) : (\n        'Add user'\n      )}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n\n  </section>\n);\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [prevTodos, setTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleCheck, setTitleCheck] = useState(false);\n  const [userIdCheck, setuserIdCheck] = useState(false);\n\n  const createTodo = () => {\n    return (\n      {\n        id: Math.max(0, ...prevTodos.map(({ id }) => id + 1)),\n        userId,\n        title,\n        completed: false,\n        user: getUser(userId) || null,\n      }\n    );\n  };\n\n  function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    if (title.trim().length < 1) {\n      setTitleCheck(true);\n    }\n\n    if (userId === 0) {\n      setuserIdCheck(true);\n    }\n\n    if ((title.trim().length === 0) || (userId === 0)) {\n      return;\n    }\n\n    setTodos([...prevTodos, createTodo()]);\n    setUserId(0);\n    setTitle('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            placeholder=\"Enter a title\"\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleCheck(false);\n            }}\n          />\n          {titleCheck && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setuserIdCheck(false);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userIdCheck && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={prevTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}